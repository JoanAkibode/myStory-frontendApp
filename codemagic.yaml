workflows:
  expo-ios:
    name: Expo iOS Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      vars:
        EXPO_TOKEN: $EXPO_TOKEN
      node: latest
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
    scripts:
      - name: Install dependencies
        script: |
          # Clean install to avoid cache issues
          rm -rf node_modules
          # Install dependencies with legacy peer deps to handle warnings
          npm install --legacy-peer-deps
      - name: Set up EAS
        script: |
          # Install EAS CLI
          echo "Installing EAS CLI..."
          npm install -g eas-cli
          
          # Debug: Print EAS CLI version
          echo "EAS CLI version:"
          eas --version
          
          # Debug environment
          echo "Environment debugging:"
          echo "Shell: $SHELL"
          echo "PWD: $PWD"
          
          # Verify EXPO_TOKEN without exposing it
          if [ -z "$EXPO_TOKEN" ]; then
            echo "Error: EXPO_TOKEN is not set"
            exit 1
          else
            TOKEN_LENGTH=${#EXPO_TOKEN}
            echo "EXPO_TOKEN length: $TOKEN_LENGTH"
            
            # Print token format for debugging (safely)
            echo "Token format check:"
            if [[ $EXPO_TOKEN == *"_"* ]]; then
              echo "Token contains expected underscore character"
            else
              echo "Warning: Token format might be incorrect"
            fi
          fi
          
          # Create temporary EAS config
          echo "Creating temporary EAS config..."
          echo "{\"cli\": {\"version\": \">= 5.9.1\",\"appVersionSource\": \"local\"},\"build\": {\"development\": {\"developmentClient\": true,\"distribution\": \"internal\"}}}" > eas.json
          
          # Attempt to login with token
          echo "Logging in to EAS..."
          export EXPO_TOKEN="$EXPO_TOKEN"
          eas login --token "$EXPO_TOKEN"
          
          # Verify login status
          echo "Verifying EAS login status..."
          eas whoami
      - name: Build iOS app
        script: |
          echo "Starting iOS build..."
          eas build --platform ios --profile development --non-interactive --json
    artifacts:
      - "*.ipa"
      - "*.app"
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM 